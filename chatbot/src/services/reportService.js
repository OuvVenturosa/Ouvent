/**
 * Servi√ßo de relat√≥rios
 * Gerencia a gera√ß√£o e agendamento de relat√≥rios
 */

const PDFDocument = require('pdfkit');
const fs = require('fs');
const path = require('path');

// Armazenamento de dados para relat√≥rios
const atendimentosMensais = {};

/**
 * Agenda a gera√ß√£o de relat√≥rios mensais
 */
function scheduleMonthlyReport() {
    console.log('üìä Agendando gera√ß√£o de relat√≥rio mensal...');
    
    // Calcula a data do pr√≥ximo m√™s
    const now = new Date();
    const nextMonth = new Date(now.getFullYear(), now.getMonth() + 1, 1);
    
    // Calcula o tempo at√© o pr√≥ximo m√™s em milissegundos
    const timeUntilNextMonth = nextMonth.getTime() - now.getTime();
    
    // Agenda a gera√ß√£o do relat√≥rio para o pr√≥ximo m√™s
    setTimeout(() => {
        generateMonthlyReport();
        // Reagenda para o pr√≥ximo m√™s
        scheduleMonthlyReport();
    }, timeUntilNextMonth);
    
    console.log(`üìÖ Pr√≥ximo relat√≥rio agendado para: ${nextMonth.toLocaleDateString()}`);
}

/**
 * Gera um relat√≥rio mensal de atendimentos
 */
function generateMonthlyReport() {
    console.log('üìä Gerando relat√≥rio mensal...');
    
    // Obt√©m o m√™s e ano atual
    const now = new Date();
    const month = now.getMonth();
    const year = now.getFullYear();
    
    // Nome do arquivo
    const fileName = `relatorio_${year}_${month + 1}.pdf`;
    const filePath = path.join(__dirname, '../../relatorios_mensais', fileName);
    
    // Cria o documento PDF
    const doc = new PDFDocument();
    const stream = fs.createWriteStream(filePath);
    
    doc.pipe(stream);
    
    // Adiciona o t√≠tulo
    doc.fontSize(20).text('Relat√≥rio Mensal de Atendimentos', {
        align: 'center'
    });
    
    doc.moveDown();
    doc.fontSize(14).text(`Per√≠odo: ${month + 1}/${year}`, {
        align: 'center'
    });
    
    doc.moveDown();
    
    // Adiciona os dados do relat√≥rio
    // Aqui voc√™ pode adicionar os dados espec√≠ficos do seu relat√≥rio
    
    // Finaliza o documento
    doc.end();
    
    console.log(`‚úÖ Relat√≥rio mensal gerado: ${filePath}`);
}

/**
 * Registra um atendimento para o relat√≥rio mensal
 * @param {Object} atendimento Dados do atendimento
 */
function registerAtendimento(atendimento) {
    const now = new Date();
    const month = now.getMonth();
    const year = now.getFullYear();
    
    const key = `${year}_${month + 1}`;
    
    if (!atendimentosMensais[key]) {
        atendimentosMensais[key] = [];
    }
    
    atendimentosMensais[key].push(atendimento);
    
    console.log(`‚úÖ Atendimento registrado para relat√≥rio de ${month + 1}/${year}`);
}

module.exports = {
    scheduleMonthlyReport,
    generateMonthlyReport,
    registerAtendimento
};